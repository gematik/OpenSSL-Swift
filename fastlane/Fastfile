fastlane_version "2.210.1"

xcodes(
  version: ENV["FL_XCODE_VERSION"] || "16.0.0",
  select_for_current_build_only: true, 
  update_list: false
)

lane :cibuild do
  test
end

lane :test do
  scan(
    scheme: "OpenSSL_macOS"
    )
  scan(
    scheme: "OpenSSL_iOS",
    device: "iPhone 11"
    )
end

lane :build_all do
  scan(
    scheme: "OpenSSL_macOS",
    build_for_testing: true
    )
  scan(
    scheme: "OpenSSL_iOS",
    device: "iPhone 11",
    build_for_testing: true
    )
end

lane :static_code_analysis do
  swiftlint_mint="mint run swiftlint"
  swiftlint(
    executable: swiftlint_mint,
    mode: :lint,
    ignore_exit_status: false,
    quiet: true,
    strict: true
    )
  sh "cd .. && swiftformat . --config .swiftformat --lint --quiet; cd -"
end

desc "Lane that (auto) genarates API documentation from inline comments."
lane :generate_documentation do
  jazzy(
    config: ".jazzy.yml"
    )
end

lane :build_xcframework do
  # Build OpenSSL xcframework for iOS and macOS
  sh "pushd ..; mint run carthage build --platform iOS,Mac --configuration Release --cache-builds --use-xcframeworks --no-skip-current; popd"

  # Move and rename it
  sh "pushd ..; mkdir -p artifacts/xcframework && rm -rf artifacts/xcframework/* && mv Carthage/Build/OpenSSL.xcframework artifacts/xcframework/; popd"
  sh "pushd ../artifacts/xcframework; mv OpenSSL.xcframework OpenSSL_#{build_version}.xcframework; popd"
  
  sh "pushd ../artifacts/xcframework; xcrun codesign --timestamp -s \"Apple Distribution\" OpenSSL_#{build_version}.xcframework; popd"

  # Zip it
  sh "pushd ../artifacts/xcframework; zip -ry OpenSSL_#{build_version}.xcframework.zip OpenSSL_#{build_version}.xcframework; popd"

  # Compute checksum
  sh "pushd ../artifacts/xcframework; swift package compute-checksum OpenSSL_#{build_version}.xcframework.zip > OpenSSL_#{build_version}.xcframework.zip.checksum; popd"

end

def build_version()
  ENV['BUILD_NUMBER'] || 'LOCAL_BUILD'
end
